MODEL:
  META_ARCHITECTURE: "RetinaNet"
  INPUT_ALIGN: 128
  BACKBONE:
    NAME: "build_any_bifpn_backbone"
  EFFICIENTNETS:
    TYPE: 0
    FROZEN_BN: False
    MAKE_C6C7: "C6C7"
    NORM: "evo_norm_s0"
    ACTIVATION_FN: "NA"
  ANCHOR_GENERATOR:
    #SIZES: [[32, 40.31747359663594, 50.79683366298238], [64, 80.63494719327188, 101.59366732596476], [128, 161.26989438654377, 203.18733465192952], [256, 322.53978877308754, 406.37466930385904], [512, 645.0795775461751, 812.7493386077181]]
    SIZES: [[32, 40.31747359663594, 50.79683366298238], [64, 80.63494719327188, 101.59366732596476], [128, 161.26989438654377, 203.18733465192952]]
  BIFPN:
    IN_FEATURES: ["C2", "C3", "C4"]
    BACKBONE: "build_efficientnet_backbone"
    REPEAT: 1
    NORM: "GN"
    ACTIVATION_FN: "swish"
  RETINANET:
    IN_FEATURES: ["P2","P3","P4"]
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    NORM: "evo_norm_s0"
    ACTIVATION_FN: "NA"
DATASETS:
  TRAIN: "mnistod_train"
  TEST: "mnistod_eval"
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (6000,8000,10000)
  MAX_ITER: 90000
INPUT:
  #MIN_SIZE_TRAIN: (96,128,160,256)
  MIN_SIZE_TRAIN: (224,256,288)
  MIN_SIZE_TEST: 224
  SIZE_ALIGN_FOR_TEST: 128
VERSION: 2
GLOBAL:
  PROJ_NAME: "RetinNetDemon"
